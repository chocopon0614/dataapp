package dataapp;

import static org.junit.jupiter.api.Assertions.assertEquals;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import dataapp.dao.UserDataDao;
import dataapp.dao.UserDatabloodDao;
import dataapp.dao.UserInformationDao;

@ExtendWith(MockitoExtension.class)
public class OpenTest {
	@Mock
	private Util util;

	@Mock
	private UserInformationDao daoUser;

	@Mock
	private UserDataDao daoData;

	@Mock
	private UserDatabloodDao daoBlood;

	@InjectMocks
	private Open openController;

	@BeforeEach
	public void setup() {
		MockitoAnnotations.openMocks(this);
	}

//	@Test
//	void userinfoTestNormal() {
//
//		UserInformation user = new UserInformation();
//		user.setUsername("dummyUsername");
//
//		UserData data1 = new UserData();
//		data1.setId(1338);
//		data1.setHeight(138.0);
//		data1.setWeight(46.3);
//		data1.setUserinformation(user);
//		data1.setCreateTime(Timestamp.valueOf("2011-12-01 04:12:43.389"));
//
//		List<UserData> dataList = new ArrayList<>();
//		dataList.add(data1);
//
//		try {
//			doReturn(new UserInformation()).when(daoUser).findByUsername(Mockito.anyString());
//			doReturn(dataList).when(daoData).findByUseridSelected(Mockito.any());
//
//			ResponseEntity<String> result = openController.userInfo("dummyToken");
//			assertEquals(HttpStatus.OK, result.getStatusCode());
//
//		} catch (Exception e) {
//			e.printStackTrace();
//		}
//
//	}

	@Test
	void userinfoTestException() {

		try {
			ResponseEntity<String> result = openController.userInfo("Bearer dummyToken");
			assertEquals(HttpStatus.INTERNAL_SERVER_ERROR, result.getStatusCode());

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

//	@Test
//	void chartdataTestNormal() {
//
//		UserDatablood data1 = new UserDatablood();
//		data1.setTg(12.3);
//		data1.setLdl(22);
//
//		try {
//			doReturn(new UserInformation()).when(daoUser).findByUsername(Mockito.anyString());
//			doReturn(data1).when(daoBlood).findByUserid(Mockito.any());
//
//			ResponseEntity<String> result = openController.chartData("dummyToken");
//			assertEquals(HttpStatus.OK, result.getStatusCode());
//
//		} catch (Exception e) {
//			e.printStackTrace();
//		}
//
//	}

	@Test
	void chartdataTestException() {

		try {
			ResponseEntity<String> result = openController.chartData("Bearer dummyToken");
			assertEquals(HttpStatus.INTERNAL_SERVER_ERROR, result.getStatusCode());

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
